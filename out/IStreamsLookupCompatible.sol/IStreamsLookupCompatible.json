{"abi":[{"type":"function","name":"checkCallback","inputs":[{"name":"values","type":"bytes[]","internalType":"bytes[]"},{"name":"extraData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"upkeepNeeded","type":"bool","internalType":"bool"},{"name":"performData","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"error","name":"StreamsLookup","inputs":[{"name":"feedParamKey","type":"string","internalType":"string"},{"name":"feeds","type":"string[]","internalType":"string[]"},{"name":"timeParamKey","type":"string","internalType":"string"},{"name":"time","type":"uint256","internalType":"uint256"},{"name":"extraData","type":"bytes","internalType":"bytes"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"checkCallback(bytes[],bytes)":"4b56a42e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"feedParamKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"feeds\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"timeParamKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"StreamsLookup\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"checkCallback\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkCallback(bytes[],bytes)\":{\"params\":{\"extraData\":\"context data from feed lookup process.\",\"values\":\"an array of bytes returned from Mercury endpoint.\"},\"returns\":{\"performData\":\"bytes that the upkeep should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the upkeep should call performUpkeep or not.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkCallback(bytes[],bytes)\":{\"notice\":\"any contract which wants to utilize FeedLookup feature needs to implement this interface as well as the automation compatible interface.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/external/chainlink/interfaces/IStreamsLookupCompatible.sol\":\"IStreamsLookupCompatible\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@balancer-labs/=node_modules/@balancer-labs/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb-math/=lib/prb-math/src/\",\":@prb-test/=lib/prb-test/src/\",\":@zaros/=src/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"src/external/chainlink/interfaces/IStreamsLookupCompatible.sol\":{\"keccak256\":\"0x7f7d79e9d75717bb71080117288f60724eeeca98719c7018fc740cb4f004bd41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5044fe9d0d2499f3b21fea280ce2862a9f9a18643588e39f7daedcccbf709a7\",\"dweb:/ipfs/QmZvKcqvgoeQhxEh7kaZb8vdc23iRX8JVsyv3Rq3JbHu3S\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"feedParamKey","type":"string"},{"internalType":"string[]","name":"feeds","type":"string[]"},{"internalType":"string","name":"timeParamKey","type":"string"},{"internalType":"uint256","name":"time","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"type":"error","name":"StreamsLookup"},{"inputs":[{"internalType":"bytes[]","name":"values","type":"bytes[]"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"stateMutability":"view","type":"function","name":"checkCallback","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}]}],"devdoc":{"kind":"dev","methods":{"checkCallback(bytes[],bytes)":{"params":{"extraData":"context data from feed lookup process.","values":"an array of bytes returned from Mercury endpoint."},"returns":{"performData":"bytes that the upkeep should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the upkeep should call performUpkeep or not."}}},"version":1},"userdoc":{"kind":"user","methods":{"checkCallback(bytes[],bytes)":{"notice":"any contract which wants to utilize FeedLookup feature needs to implement this interface as well as the automation compatible interface."}},"version":1}},"settings":{"remappings":["@balancer-labs/=node_modules/@balancer-labs/","@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@prb-math/=lib/prb-math/src/","@prb-test/=lib/prb-test/src/","@zaros/=src/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","prb-math/=lib/prb-math/src/","prb-test/=lib/prb-test/src/"],"optimizer":{"enabled":true,"runs":1000},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"src/external/chainlink/interfaces/IStreamsLookupCompatible.sol":"IStreamsLookupCompatible"},"evmVersion":"shanghai","libraries":{}},"sources":{"src/external/chainlink/interfaces/IStreamsLookupCompatible.sol":{"keccak256":"0x7f7d79e9d75717bb71080117288f60724eeeca98719c7018fc740cb4f004bd41","urls":["bzz-raw://c5044fe9d0d2499f3b21fea280ce2862a9f9a18643588e39f7daedcccbf709a7","dweb:/ipfs/QmZvKcqvgoeQhxEh7kaZb8vdc23iRX8JVsyv3Rq3JbHu3S"],"license":"MIT"}},"version":1},"id":141}